# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
#include: package:flutter_lints/flutter.yaml

# I use specialize analyzer settings to assist in having a
# fine-tuned developer feedback concerning types
# beyond the recommendations as I have found that it saves
# developer time when migrating to the dart major version
# versions.

analyzer:
  # required for to ignore auto-generated code as it will always hang using the
  # analyzer. DCDG UML generation tool requires this line as it does use the
  # analyzer as a dependency.
  exclude:
    - lib/src/localization_gen/**
    - test/**
#   my modified settings for language and strong-mode and errors
  language:
    strict-raw-types: true
  errors:
    missing_required_param: warning
    missing_return: warning
    todo: ignore
  plugins:
    - dart_code_metrics
dart_code_metrics:
  anti-patterns:
    - long-method
    - long-parameter-list
  metrics:
    cyclomatic-complexity: 20
    maximum-nesting-level: 10
    number-of-parameters: 10
    source-lines-of-code: 200
  metrics-exclude:
    - test/noble_quran_test.dart
  # per https://dartcodemetrics.dev/docs/getting-started/configuration#configuring-a-rules-entry
  # and https://dartcodemetrics.dev/docs/rules/overview
  rules:
    - always-remove-listener:
        severity:  warning
    - avoid-border-all:
        severity: warning
    - avoid-returning-widgets:
        severity: warning
    - avoid-unnecessary-setstate:
        severity: warning
    - member-ordering-extended:
        severity: warning
    - avoid-late-keyword:
        severity:  warning
    - avoid-nested-conditional-expressions:
        severity:  style
    - avoid-non-null-assertion:
        severity:  warning
    - avoid-unnecessary-setstate:
        severity:  warning
    - avoid-unused-parameters:
        severity:  warning
    - avoid-wrapping-in-padding:
        severity:  warning
    - binary-expression-operand-order:
        severity:  style
    - double-literal-format:
        severity:  style
    - newline-before-return:
        severity:  style
    - no-boolean-literal-compare:
        severity:  style
    - no-empty-bloc:
        severity:  style
    - no-equal-arguments:
        severity:  warning
    - no-equal-then-else:
        severity:  warning
    - no-object-declaration:
        severity:  style
    - prefer-conditional-expression:
        severity:  style
    - prefer-const-border-radius:
        severity:  performance
    - prefer-extracting-callbacks:
        severity:  style
    - prefer-intl-name:
        severity:  warning
    - prefer-single-widget-per-file:
        severity:  style
    - prefer-correct-indentifier-length:
        exceptions: [ 'z' ]
        max-identifier-length: 30
        min-identifier-length: 4
    - prefer-correct-type-name:
        excluded: [ 'exampleExclude' ]
        min-length: 3
        max-length: 40
    - prefer-first:
        severity:  style
    - prefer-last:
        severity:  style
    - prefer-trailing-comma:
        break-on: 2
    - provide-correct-intl-args:
        severity:  warning
